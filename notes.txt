class Player {
    constructor(game){
        this.game = game;
        this.width = 30;
        this.height = 30;
        this.x = game.width /2 - this.width/2;
        this.y = game.height-this.height -10;
        this.dir = true;
        this.speed = 5;
        this.tire = false;
    }
    draw(context){
        context.fillRect(this.x,this.y,this.width,this.height);
    }

    shoot(){
        const currentFire = this.game.useFire();
        if(currentFire) currentFire.start(this.x + this.width/2 -currentFire.width/2,this.y);
    }
}


class Monster {
    constructor(game){
        this.game = game
        this.width;
        this.height;
        this.x;
        this.y;
    }
}

class GrMonster{
    constructor(game){
        this.game = game;
        this.width = this.game.grCol * this.game.enemySize;
        this.height = this.game.grRow * this.game.enemySize;
        this.x=30;
        this.y=30;
    }

    createGr(context){
        console.log("greated the waves")
        context.strokeRect(this.x,this.y,this.width,this.height);
        context.lineWidth = 10;
    }
}

class Fire {
    constructor(){
        this.width = 10;
        this.height = 10;
        this.abs = 20;
        this.ord = 10;
        this.speed = 5;
        this.free = true;
    }
    draw(context){
        if(!this.free) context.fillRect(this.abs,this.ord,this.width,this.height);
    }

    update(){
        if(!this.free) this.ord -= this.speed;
        if(this.ord <=5) this.reset();
    }

    start(x,y){
        this.abs = x;
        this.ord = y;

        this.free = false;
    }
    reset(){
        this.free = true;
    }
}

class Game {
    constructor(canvas){
        this.canvas = canvas;
        this.width = this.canvas.width;
        this.height = this.canvas.height;
        this.Player = new Player(this);
        this.keys = [];
        
        this.boolFire = [];
        this.boolFireNum = 10;
        this.creatBool();

        this.Gr = [];
        this.Gr.push(new GrMonster(this));
        this.grCol = 3; 
        this.grRow = 3;
        this.enemySize = 40;
        document.addEventListener('keydown', (event) => {
            if(this.keys.indexOf(event.key) == -1) this.keys.push(event.key);
            this.Player.tire ++;
            console.log(this.keys);
        });
        document.addEventListener('keyup', (event) => {
            let index = this.keys.indexOf(event.key);
            if(index != -1) this.keys.splice(index,1);
            this.Player.tire ++;
            console.log(this.keys);
        });
    }

    creatBool(){
            for(let i = 0 ; i<this.boolFireNum ; i++) this.boolFire[i] = new Fire();
        }
    useFire(){
        for(let i = 0;i<this.boolFire.length;i++){
            if(this.boolFire[i].free) return this.boolFire[i];
        }
    }
    Go(context){
        this.Player.draw(context);
        this.Gr.forEach((ele)=>{
            ele.createGr(context);
        })
        for(let x of this.keys){
            if(this.Player.x>=5) 
                if(x==="ArrowLeft") this.Player.x -= this.Player.speed;
            if(x==='x') {
                if(this.Player.tire>=2){
                    this.Player.shoot();
                    console.log("this is X");
                }
                this.Player.tire = 0;
            }
            if(this.Player.x <=this.width - this.Player.width -5) 
                if(x==="ArrowRight") this.Player.x += this.Player.speed;
            // if(this.Player.y>=5)
            //     if(x==="ArrowUp") this.Player.y -= this.Player.speed;
            // if(this.Player.y <= this.height - this.Player.height -5)
            //     if(x==="ArrowDown") this.Player.y += this.Player.speed;
        }
        this.boolFire.forEach((fire)=>{
            fire.draw(context);
            fire.update();
        })
    }
}

window.addEventListener("load",()=>{
    let theGame = document.getElementById("mainGame");
    let ctx = theGame.getContext("2d");
    theGame.width = 300;
    theGame.height = 500;
    const myGame = new Game(theGame);
    let shoot = document.getElementById("shoot");
    shoot.addEventListener("click",()=>{
        myGame.Player.shoot();
    })
    function animate(){
        ctx.clearRect(0,0,theGame.width,theGame.height);
        myGame.Go(ctx);
        requestAnimationFrame(animate);
    }

    animate();
});